// basecondition ~ less-framework ~ v3.2
// copyright 2014 ~ Joachim Doerr ~ hello@basecondition.com
// licensed under MIT or GPLv3 ~ git.io/OJYZgw

// ----------------------------------------------------- ~ opacity
// #transparency > .opacity(0.5);
// #transparency > .background(@black, 0.5);
// #transparency > .border(@black, 0.5);

// @helper methode: ../../elements/helper.less
// @usage: .opacity(0.5);

// @namespace: #transparency

#transparency {
    
    // @methode: .opacity
    // @usage: #transparency > .opacity(0.5);
    
    .opacity(@var) {
        .inception(@var) when (isnumber(@var)) {
            @var-ms : @var * 100;
            -webkit-opacity: @var;
             -khtml-opacity: @var;
               -moz-opacity: @var;
                    opacity: @var;
                 -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=@{var-ms})";
        }
        .inception(@var);
    }
    
    // @methode: .background
    // @usage: #transparency > .background(@black, 0.5);
    
    .background(@var-color, @var-alpha) {
        #translucent > .background(@var-color, @var-alpha);
    }
    
    // @methode: .border
    // @usage: #transparency > .border(@black, 0.5);
    
    .border(@var-color, @var-alpha) {
        #translucent > .border(@var-color, @var-alpha);
    }
}