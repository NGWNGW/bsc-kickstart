// basecondition ~ less-framework ~ v3.2
// copyright 2014 ~ Joachim Doerr ~ hello@basecondition.com
// licensed under MIT or GPLv3 ~ git.io/OJYZgw

// ----------------------------------------------------- ~ shadow
// #text > .shadow(0, 1px, 0, #000, 0.5);
// #text > .shadow(~"0 0 0.2em rgba(0,0,0,0.9), 0 0 0.2em rgba(0,0,0,0.9), 0 0 0.2em rgba(0,0,0,0.9)");
// #text > .fill();

// @namespace: #text

#text {
    
    // @methode: .shadow
    // @usage: #text > .shadow(0, 1px, 0, #000, 0.5);
    // @usage: #text > .shodow(~"0 0 0.2em rgba(0,0,0,0.9), 0 0 0.2em rgba(0,0,0,0.9), 0 0 0.2em rgba(0,0,0,0.9)");
    
    .shadow(@var-x, @var-y: false, @var-blur: false, @var-color: false, @var-alpha: false) {
        .shadow-inception(@var) {
            text-shadow: @var;
        }
        .inception(@var, @var-1, @var-2, @var-3, @var-4) when (@var-1 = false) and (@var-2 = false) and (@var-3 = false) and (@var-4 = false) {
            .shadow-inception(@var);
            // filter: progid:DXImageTransform.Microsoft.Shadow(direction=135,strength=2,color=@var-color);
            // http://caniuse.com/css-textshadow
        }
        .inception(@var, @var-1, @var-2, @var-3, @var-4) when not (@var-1 = false) and not (@var-2 = false) and not (@var-3 = false) and not (@var-4 = false) {
            @var-5: hsla(hue(@var-3), saturation(@var-3), lightness(@var-3), @var-4);
            @var-6: @var @var-1 @var-2 @var-5;
            .shadow-inception(@var @var-1 @var-2 @var-5);
        }
        .inception(@var-x, @var-y, @var-blur, @var-color, @var-alpha);
    }
    
    // @methode: .fill
    // @usage: #text > .fill();
    
    .fill() {
        #background > .clip(text);
        -moz-text-fill-color: transparent;
        -webkit-text-fill-color: transparent;
    }
}